{"version":3,"file":"static/js/526.44b8d5dc.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.18\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.18\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.18 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_get","Reflect","get","bind","target","property","receiver","base","object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","arguments","length","apply","this","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","push","_objectSpread2","i","source","forEach","getOwnPropertyDescriptors","defineProperties","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","isMounted","_createClass","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","cancel","index","splice","delete","process","createRenderStep","processStep","stepId","processFrame","requestAnimationFrame","frame","keepAlive","immediate","cancelFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","read","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","resolveCSSVariables","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","createDomMotionConfig"],"sourceRoot":""}