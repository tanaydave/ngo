{"version":3,"file":"static/js/581.9e314a0e.chunk.js","mappings":"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","sources":["components/Campaigns.jsx","../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {motion as m } from 'framer-motion'\r\nimport misvis from '../assets/misvis.jpg'\r\nimport {  useEffect } from \"react\";\r\nimport { useAnimation } from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nconst container = {\r\n  hidden: { opacity: 1, scale: 1 },\r\n  visible: {\r\n    opacity: 1,\r\n    scale: 1,\r\n    transition: {\r\n      duration:1.5,\r\n      delayChildren: 0.8,\r\n      staggerChildren: 0.5\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst item = {\r\n  hidden: { y: 20, opacity: 0 },\r\n  visible: {\r\n    y: 0,\r\n    opacity: 1\r\n  },\r\n};\r\nconst Campaigns = () => {\r\n    \r\n const controls = useAnimation();\r\nconst [ref, inView] = useInView();\r\nuseEffect(() => {\r\n    if (inView) {\r\n      controls.start(\"visible\");\r\n    }\r\n  }, [controls, inView])\r\n\r\n\r\n\r\n  return (\r\n    <m.ul\r\n    ref={ref}\r\n    \r\n    variants={container}\r\n    initial=\"hidden\"\r\n    animate={controls}\r\n      \r\n       \r\n        className=\"py-16 \"\r\n      >\r\n        <div className=\"flex flex-col items-center\">\r\n          <p className=\"md:text-6xl font-extrabold md:py-6 font-[Yeseva-One]\">Current Campaigns</p>\r\n          <div className=\"flex gap-8 justify-center px-12 py-12\">\r\n            <m.li variants={item} className=\"w-[22vw]   h-[72vh] transition-all hover:shadow-2xl border-2 rounded-3xl  overflow-hidden\">\r\n              <img src={misvis} alt=\"\" className=\" w-full h-[25vh] \" />\r\n              <div className=\"pt-12 px-4 bg-slate-200 h-32\">\r\n              {/* <div className=\"w-full bg-gray-600 rounded-full  dark:bg-gray-900 \">\r\n                  <div\r\n                    className=\"bg-orange-500 text-xs font-medium text-blue-100 text-center p-0.5 leading-none rounded-full w-[50%]\"\r\n                    \r\n                  >\r\n                    {\" \"}\r\n                    50%\r\n                  </div>\r\n                </div> */}\r\n                <div className=\"\">\r\n                  <div className=\" bg-orange-200 relative h-[10px] w-full rounded-2xl\">\r\n                    <div className=\" bg-orange-500 absolute top-0 left-0 h-full w-[50%] rounded-2xl\">\r\n                      <span className=\"bg-orange-500 absolute -right-4 bottom-full mb-2 rounded-sm py-1 px-2 text-xs font-semibold text-white\">\r\n                        <span className=\"bg-orange-500 absolute bottom-[-2px] left-1/2  h-2 w-2 -translate-x-1/2 rotate-45 rounded-sm\"></span>\r\n                        50%\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex justify-between px-1 pt-3 \">\r\n                  <div className=\"text-orange-500 \">Raised: Rs 1000 </div>\r\n                  <div className=\"text-[#09b6cb]\">Goal: Rs 2000</div>\r\n                </div>\r\n                </div>\r\n              <div className=\"flex flex-col px-4 gap-4 py-4\">\r\n                <div className=\"text-xl font-semibold hover:text-orange-500\">\r\n                  Lorem ipsum dolor sit amet consectetur.\r\n                </div>\r\n                <div className=\"text-md \">\r\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit. Enim,\r\n                  cum.\r\n                </div>\r\n                <button className=\"border-2 rounded-full p-3 mt-2 w-32 text-white bg-orange-500 transition\">\r\n                  Read More\r\n                </button>\r\n               \r\n                \r\n              </div>\r\n            </m.li>\r\n            <m.li variants={item} className=\"w-[22vw] hover:shadow-2xl border-2 h-[72vh] transition-all   rounded-3xl  overflow-hidden\">\r\n              <img src={misvis} alt=\"\" className=\" h-[25vh] w-full \" />\r\n              <div className=\"pt-12 px-4 bg-slate-200 h-32\">\r\n              {/* <div className=\"w-full bg-gray-600 rounded-full  dark:bg-gray-900 \">\r\n                  <div\r\n                    className=\"bg-orange-500 text-xs font-medium text-blue-100 text-center p-0.5 leading-none rounded-full w-[50%]\"\r\n                    \r\n                  >\r\n                    {\" \"}\r\n                    50%\r\n                  </div>\r\n                </div> */}\r\n                <div className=\"\">\r\n                  <div className=\" bg-orange-200 relative h-[10px] w-full rounded-2xl\">\r\n                    <div className=\" bg-orange-500 absolute top-0 left-0 h-full w-[60%] rounded-2xl\">\r\n                      <span className=\"bg-orange-500 absolute -right-4 bottom-full mb-2 rounded-sm py-1 px-2 text-xs font-semibold text-white\">\r\n                        <span className=\"bg-orange-500 absolute bottom-[-2px] left-1/2  h-2 w-2 -translate-x-1/2 rotate-45 rounded-sm\"></span>\r\n                        60%\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex justify-between px-1 pt-3 \">\r\n                  <div className=\"text-orange-500 \">Raised: Rs 1000 </div>\r\n                  <div className=\"text-[#09b6cb]\">Goal: Rs 2000</div>\r\n                </div>\r\n                </div>\r\n              <div className=\"flex flex-col px-4 gap-4 py-4\">\r\n                <div className=\"text-xl font-semibold hover:text-orange-500\">\r\n                  Lorem ipsum dolor sit amet consectetur.\r\n                </div>\r\n                <div className=\"text-md\">\r\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit. Enim,\r\n                  cum.\r\n                </div>\r\n                <button className=\"border-2 rounded-full p-3 mt-2 w-32 text-white bg-orange-500 transition\">\r\n                  Read More\r\n                </button>\r\n               \r\n                \r\n              </div>\r\n            </m.li>\r\n            <m.li variants={item} className=\"w-[22vw] transition-all   h-[72vh] hover:shadow-2xl border-2 rounded-3xl  overflow-hidden\">\r\n              <img src={misvis} alt=\"\" className=\" w-full h-[25vh] \" />\r\n              <div className=\"pt-12 px-4 bg-slate-200 h-32\">\r\n              {/* <div className=\"w-full bg-gray-600 rounded-full  dark:bg-gray-900 \">\r\n                  <div\r\n                    className=\"bg-orange-500 text-xs font-medium text-blue-100 text-center p-0.5 leading-none rounded-full w-[50%]\"\r\n                    \r\n                  >\r\n                    {\" \"}\r\n                    50%\r\n                  </div>\r\n                </div> */}\r\n                <div className=\"\">\r\n                  <div className=\" bg-orange-200 relative h-[10px] w-full rounded-2xl\">\r\n                    <div className=\" bg-orange-500 absolute top-0 left-0 h-full w-[60%] rounded-2xl\">\r\n                      <span className=\"bg-orange-500 absolute -right-4 bottom-full mb-2 rounded-sm py-1 px-2 text-xs font-semibold text-white\">\r\n                        <span className=\"bg-orange-500 absolute bottom-[-2px] left-1/2  h-2 w-2 -translate-x-1/2 rotate-45 rounded-sm\"> </span>\r\n                        60%\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex justify-between px-1 pt-3 \">\r\n                  <div className=\"text-orange-500 \">Raised: Rs 1000 </div>\r\n                  <div className=\"text-[#09b6cb]\">Goal: Rs 2000</div>\r\n                </div>\r\n                </div>\r\n              <div className=\"flex flex-col px-4 gap-4 py-4\">\r\n                <div className=\"text-xl font-semibold hover:text-orange-500\">\r\n                  Lorem ipsum dolor sit amet consectetur.\r\n                </div>\r\n                <div className=\"text-md\">\r\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit. Enim,\r\n                  cum.\r\n                </div>\r\n                <button className=\"border-2 rounded-full p-3 mt-2 w-32 text-white bg-orange-500 transition\">\r\n                  Read More\r\n                </button>\r\n               \r\n                \r\n              </div>\r\n            </m.li>\r\n          </div>\r\n        </div>\r\n      </m.ul>\r\n  )\r\n}\r\n\r\nexport default Campaigns\r\n","import { invariant } from '../../utils/errors.mjs';\nimport { setValues } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls };\n","import { animationControls } from './animation-controls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === 'root'\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === 'function') {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["container","hidden","opacity","scale","visible","transition","duration","delayChildren","staggerChildren","item","y","controls","useAnimation","_useInView","useInView","_useInView2","_slicedToArray","ref","inView","useEffect","start","_jsx","m","ul","variants","initial","animate","className","children","_jsxs","li","src","misvis","alt","animationControls","hasMounted","subscribers","Set","subscribe","visualElement","add","delete","definition","transitionOverride","invariant","animations","forEach","push","animateVisualElement","Promise","all","set","setValues","stop","values","value","stopAnimation","mount","useConstant","useIsomorphicLayoutEffect","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","Object","keys","sort","filter","key","map","concat","root","has","toString","get","observe","element","callback","arguments","length","undefined","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","_createObserver","id","instance","thresholds","elements","observer","entries","entry","_a","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","splice","indexOf","unobserve","size","disconnect","React","_ref","delay","rootMargin","triggerOnce","skip","initialInView","onChange","_React2$useState","React2","_React2$useState2","setRef","_React2$useState3","_React2$useState4","state","setState","current","entryTarget","previousEntryTarget","result"],"sourceRoot":""}