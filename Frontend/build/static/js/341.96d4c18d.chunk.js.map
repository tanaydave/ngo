{"version":3,"file":"static/js/341.96d4c18d.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.18\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.18 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.18\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_get","Reflect","get","bind","target","property","receiver","base","object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","arguments","length","apply","this","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","push","_objectSpread2","i","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","sourceSymbolKeys","propertyIsEnumerable","instantAnimationState","isBezierDefinition","easing","Array","isArray","isWaapiSupportedEasing","Boolean","supportedWaapiEasing","every","cubicBezierAsString","_ref","_ref2","_slicedToArray","a","b","c","d","concat","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","_loop","undefined","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","isEasingArray","reverseEasing","backInOut","mirrorEasing","easingLookup","circInOut","anticipate","p","pow","easingDefinitionToFunction","definition","invariant","_definition","hueToRgb","q","mixLinearColor","from","to","v","fromExpo","sqrt","max","colorTypes","hex","rgba","hsla","asRGBA","color","type","find","test","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","_objectSpread","mix","transform","mixImmediate","origin","getMixer","startsWith","mixComplex","mixArray","output","_toConsumableArray","numValues","blendValue","fromThis","mixObject","template","complex","createTransformer","originStats","analyseComplexValue","targetStats","numVars","numColors","numNumbers","pipe","values","warning","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","clamp","isClamp","inputLength","reverse","interpolator","progressInRange","progress","defaultOffset","arr","offset","remaining","min","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","state","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","next","velocitySampleDuration","calcGeneratorVelocity","resolveValue","current","prevT","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","velocity","_ref$mass","mass","secondsToMilliseconds","dampingRatio","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","some","spring","resolveSpring","restDelta","restSpeed","_excluded","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","now","frameData","isProcessing","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","Set","createAcceleratedAnimation","valueName","has","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","animation","element","keyframeOptions","animate","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","set","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","isAnimatable","isNone","isZeroValueString","animateMotionValue","transition","valueTransition","getValueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getAnimatableNone","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","getProps","acceleratedAnimation","optimizedAppearDataAttribute","camelToDash","animateTarget","visualElement","_ref2$delay","transitionOverride","_visualElement$makeTa","makeTargetAnimatable","_visualElement$makeTa2","transitionEnd","willChange","getValue","animations","animationTypeState","animationState","getState","valueTarget","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","window","HandoffAppearAnimations","hasAnimated","appearId","shouldReduceMotion","isWillChangeMotionValue","add","remove","all","setTarget","animateVariant","variant","resolved","resolveVariant","custom","_ref$transition","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","_transition","_transition$delayChil","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","when","_ref3","first","last","sortNodePosition","animateVisualElement","resolvedDefinition","isKeyframesTarget","acos","useDefaultElapsed","runNextFrame","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","index","delete","process","createRenderStep","processStep","stepId","processFrame","requestAnimationFrame","keepAlive","immediate","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","PresenceContext","LazyContext","strict","isRefObject","ref","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","props","name","isVariantNode","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","useIsomorphicLayoutEffect","render","useEffect","updateFeatures","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","scaleCorrectors","isForcedMotionValue","translateAlias","y","z","transformPerspective","numTransforms","transformPropOrder","getValueAsType","buildHTMLStyles","latestValues","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","isCSSVariableName","valueType","numberValueTypes","valueAsType","default","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","originX","_transformOrigin$orig2","originY","_transformOrigin$orig3","originZ","createHtmlRenderState","copyRawValuesOnly","isMotionValue","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","px","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","viewBox","attrs","dimensions","pxOriginX","width","pxOriginY","height","calcSVGTransformOrigin","scale","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolveVariantFromProps","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","isMounted","_createClass","addHoverEvent","isActive","callbackName","info","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","margin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","prev","prevLength","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","parseFloat","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","startAnimation","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this3","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","motionValue","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","subscriptionManager","_len","args","_key","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","read","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","rotateZ","resetValues","setStaticValue","_b","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","clear","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","match","exec","_match","parseCSSVariable","_parseCSSVariable2","token","fallback","getPropertyValue","isCSSVariableToken","resolveCSSVariables","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","number","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","paddingLeft","_ref3$paddingRight","paddingRight","_ref4","_ref5","_ref5$paddingTop","paddingTop","_ref5$paddingBottom","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","toType","fromType","findDimensionValueType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","addValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","getOrigin","checkTargetForNewValues","parsed","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","getDefaultValueType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig","str","replace","checkStringStartsWith","cssVariableRegex","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","dimensionValueTypes","degrees","vw","vh","testValueType","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","skewX","skewY","translateX","translateY","translateZ","perspective","progressPercentage","zIndex","fillOpacity","strokeOpacity","numOctaves","getCurrent","currentValues","isNumericalString","valueTypes","findValueType","setMotionValue","_ref$transitionEnd","resolveFinalValueInKeyframes","setVariants","variantLabels","getVariant","setValues","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","getOriginFromTransition","transitionOrigin","item","any","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","seconds","milliseconds","init","useLayoutEffect","frameDuration","MotionValue","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","subscription","getSize","eventManagers","passiveEffect","stopPassiveEffect","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","isColorString","r","parseInt","splitColor","_ref$alpha","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","_v$match","floatRegex","_v$match2","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","unit","functionRegex","functions","cssVarTokeniser","regex","countKey","colorTokeniser","colorRegex","numberTokeniser","tokenise","_info$values","tokenised","originalValue","toString","parseComplexValue","_analyseComplexValue","convertNumbersToZero","transformer","createUnitType","endsWith"],"sourceRoot":""}